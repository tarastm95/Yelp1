#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Phone Opt-In –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
"""
import os
import sys
import django

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Django
sys.path.append('/var/www/yelp/backend')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from webhooks.models import LeadDetail, LeadEvent, AutoResponseSettings, LeadPendingTask

def test_phone_optin_logic():
    print("üß™ –¢–ï–°–¢–£–í–ê–ù–ù–Ø PHONE OPT-IN –õ–û–ì–Ü–ö–ò")
    print("=" * 50)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
    test_lead_id = "test_phone_optin_fix_123"
    test_business_id = "test_business_123"
    
    # –û—á–∏—â—É—î–º–æ —Å—Ç–∞—Ä—ñ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
    LeadDetail.objects.filter(lead_id=test_lead_id).delete()
    LeadEvent.objects.filter(lead_id=test_lead_id).delete()
    LeadPendingTask.objects.filter(lead_id=test_lead_id).delete()
    
    # 1. –°—Ç–≤–æ—Ä—é—î–º–æ LeadDetail –±–µ–∑ phone opt-in
    lead_detail = LeadDetail.objects.create(
        lead_id=test_lead_id,
        business_id=test_business_id,
        phone_opt_in=False,
        phone_number="",
        project={"test": "data"}
    )
    print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ LeadDetail: phone_opt_in={lead_detail.phone_opt_in}")
    
    # 2. –°—Ç–≤–æ—Ä—é—î–º–æ AutoResponseSettings –¥–ª—è phone opt-in
    settings, created = AutoResponseSettings.objects.get_or_create(
        business_id=test_business_id,
        phone_opt_in=True,
        phone_available=False,
        defaults={
            'enabled': True,
            'greeting': 'Test phone opt-in greeting',
        }
    )
    print(f"‚úÖ AutoResponseSettings: phone_opt_in=True —Å—Ç–≤–æ—Ä–µ–Ω–æ/–∑–Ω–∞–π–¥–µ–Ω–æ")
    
    # 3. –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–µ phone opt-in –∑–∞–≤–¥–∞–Ω–Ω—è
    task = LeadPendingTask.objects.create(
        lead_id=test_lead_id,
        text="Test phone opt-in follow-up message",
        task_id="test_task_123",
        phone_opt_in=True,
        phone_available=False,
        active=True
    )
    print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ phone opt-in –∑–∞–≤–¥–∞–Ω–Ω—è: {task.task_id}")
    
    # 4. –°–∏–º—É–ª—é—î–º–æ CONSUMER_PHONE_NUMBER_OPT_IN_EVENT
    print("\nüì± –°–∏–º—É–ª—é—î–º–æ CONSUMER_PHONE_NUMBER_OPT_IN_EVENT...")
    
    # –û–Ω–æ–≤–ª—é—î–º–æ LeadDetail.phone_opt_in=True (—è–∫ —Ü–µ —Ä–æ–±–∏—Ç—å webhook)
    updated = LeadDetail.objects.filter(
        lead_id=test_lead_id, phone_opt_in=False
    ).update(phone_opt_in=True)
    print(f"‚úÖ LeadDetail –æ–Ω–æ–≤–ª–µ–Ω–æ: {updated} –∑–∞–ø–∏—Å(—ñ–≤)")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    lead_detail.refresh_from_db()
    print(f"‚úÖ LeadDetail.phone_opt_in —Ç–µ–ø–µ—Ä: {lead_detail.phone_opt_in}")
    
    # 5. –¢–µ—Å—Ç—É—î–º–æ –ª–æ–≥—ñ–∫—É –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ phone opt-in consumer response
    print("\nüë§ –¢–µ—Å—Ç—É—î–º–æ –ª–æ–≥—ñ–∫—É consumer response...")
    
    ld_flags = LeadDetail.objects.filter(lead_id=test_lead_id).values("phone_opt_in", "phone_number").first()
    print(f"ld_flags: {ld_flags}")
    
    if (ld_flags and ld_flags.get("phone_opt_in")):
        print("‚úÖ Phone opt-in consumer response –±—É–¥–µ –≤–∏—è–≤–ª–µ–Ω–æ!")
        print("‚úÖ –õ–æ–≥—ñ–∫–∞ _cancel_pre_phone_tasks –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–∞")
        
        # –¢–µ—Å—Ç—É—î–º–æ _cancel_pre_phone_tasks –ª–æ–≥—ñ–∫—É
        from django.db.models import Q
        pending = LeadPendingTask.objects.filter(
            lead_id=test_lead_id, 
            active=True
        ).filter(
            Q(phone_available=False) | Q(phone_opt_in=True)
        )
        print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {pending.count()} –∑–∞–≤–¥–∞–Ω—å –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è")
        
        if pending.exists():
            for p in pending:
                print(f"   - Task: {p.task_id}, phone_opt_in={p.phone_opt_in}, phone_available={p.phone_available}")
    else:
        print("‚ùå Phone opt-in consumer response –ù–ï –±—É–¥–µ –≤–∏—è–≤–ª–µ–Ω–æ!")
    
    # 6. –û—á–∏—â–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
    print("\nüßπ –û—á–∏—â–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö...")
    LeadDetail.objects.filter(lead_id=test_lead_id).delete()
    LeadEvent.objects.filter(lead_id=test_lead_id).delete()
    LeadPendingTask.objects.filter(lead_id=test_lead_id).delete()
    AutoResponseSettings.objects.filter(business_id=test_business_id).delete()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –æ—á–∏—â–µ–Ω–æ")
    
    print("\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û!")
    print("–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –º–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.")

if __name__ == "__main__":
    test_phone_optin_logic()
