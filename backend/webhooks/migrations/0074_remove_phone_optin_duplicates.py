# Generated migration for removing phone_opt_in duplicates after unifying scenarios

from django.db import migrations
from django.db.models import Count


def remove_phone_optin_duplicates(apps, schema_editor):
    """
    –í–∏–¥–∞–ª—è—î –≤—Å—ñ Phone Opt-In —Ç–∞ Phone Available —à–∞–±–ª–æ–Ω–∏/–Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è,
    –∑–∞–ª–∏—à–∞—é—á–∏ —Ç—ñ–ª—å–∫–∏ No Phone (phone_available=False) –ø—ñ—Å–ª—è –æ–±'—î–¥–Ω–∞–Ω–Ω—è —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤
    """
    FollowUpTemplate = apps.get_model('webhooks', 'FollowUpTemplate')
    AutoResponseSettings = apps.get_model('webhooks', 'AutoResponseSettings')
    
    print("\nüßπ –û–ß–ò–©–ï–ù–ù–Ø PHONE OPT-IN –¢–ê PHONE AVAILABLE –ó–ê–ü–ò–°–Ü–í")
    print("=" * 60)
    print("üéØ –ó–∞–ª–∏—à–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ No Phone —à–∞–±–ª–æ–Ω–∏ (phone_available=False)")
    print("üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ Phone Available —à–∞–±–ª–æ–Ω–∏ (phone_available=True)")
    print("=" * 60)
    
    # 1. FollowUpTemplate: –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ phone_available=True –∑–∞–ø–∏—Å–∏
    print("\nüìã –û—á–∏—â–µ–Ω–Ω—è FollowUpTemplate...")
    
    phone_available_templates = FollowUpTemplate.objects.filter(phone_available=True)
    phone_available_count = phone_available_templates.count()
    
    if phone_available_count > 0:
        print(f"   üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ {phone_available_count} Phone Available —à–∞–±–ª–æ–Ω—ñ–≤...")
        phone_available_templates.delete()
        print(f"   ‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ {phone_available_count} Phone Available —à–∞–±–ª–æ–Ω—ñ–≤")
    else:
        print("   ‚ÑπÔ∏è  Phone Available —à–∞–±–ª–æ–Ω—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    
    # –û—á–∏—â–∞—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏ —Å–µ—Ä–µ–¥ No Phone —à–∞–±–ª–æ–Ω—ñ–≤ (phone_available=False)
    print("   üîÑ –û—á–∏—â–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ —Å–µ—Ä–µ–¥ No Phone —à–∞–±–ª–æ–Ω—ñ–≤...")
    
    no_phone_duplicates = FollowUpTemplate.objects.filter(
        phone_available=False
    ).values(
        'business_id', 'name', 'template', 'delay'
    ).annotate(
        count=Count('id')
    ).filter(count__gt=1)
    
    total_deleted_no_phone = 0
    
    for dup in no_phone_duplicates:
        copies = FollowUpTemplate.objects.filter(
            business_id=dup['business_id'],
            name=dup['name'],
            template=dup['template'],
            delay=dup['delay'],
            phone_available=False
        ).order_by('id')
        
        if copies.count() > 1:
            # –ó–∞–ª–∏—à–∞—î–º–æ –Ω–∞–π—Å—Ç–∞—Ä—à–∏–π (–Ω–∞–π–º–µ–Ω—à–∏–π ID)
            to_keep = copies.first()
            to_delete = copies.exclude(id=to_keep.id)
            
            deleted_count = to_delete.count()
            to_delete.delete()
            total_deleted_no_phone += deleted_count
            
            print(f"   üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ {deleted_count} –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ No Phone –¥–ª—è '{dup['name']}'")
    
    print(f"   ‚úÖ FollowUpTemplate: –≤–∏–¥–∞–ª–µ–Ω–æ {phone_available_count} Phone Available + {total_deleted_no_phone} –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ No Phone")
    
    # 2. AutoResponseSettings: –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ phone_available=True –∑–∞–ø–∏—Å–∏
    print("\nüìã –û—á–∏—â–µ–Ω–Ω—è AutoResponseSettings...")
    
    phone_available_settings = AutoResponseSettings.objects.filter(phone_available=True)
    phone_available_settings_count = phone_available_settings.count()
    
    if phone_available_settings_count > 0:
        print(f"   üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ {phone_available_settings_count} Phone Available –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å...")
        phone_available_settings.delete()
        print(f"   ‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ {phone_available_settings_count} Phone Available –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å")
    else:
        print("   ‚ÑπÔ∏è  Phone Available –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    
    # –û—á–∏—â–∞—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏ —Å–µ—Ä–µ–¥ No Phone –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å (phone_available=False)
    print("   üîÑ –û—á–∏—â–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ —Å–µ—Ä–µ–¥ No Phone –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å...")
    
    no_phone_settings_duplicates = AutoResponseSettings.objects.filter(
        phone_available=False
    ).values(
        'business_id'
    ).annotate(
        count=Count('id')
    ).filter(count__gt=1)
    
    total_deleted_no_phone_settings = 0
    
    for dup in no_phone_settings_duplicates:
        copies = AutoResponseSettings.objects.filter(
            business_id=dup['business_id'],
            phone_available=False
        ).order_by('id')
        
        if copies.count() > 1:
            # –ó–∞–ª–∏—à–∞—î–º–æ –Ω–∞–π—Å—Ç–∞—Ä—à–∏–π (–Ω–∞–π–º–µ–Ω—à–∏–π ID)
            to_keep = copies.first()
            to_delete = copies.exclude(id=to_keep.id)
            
            deleted_count = to_delete.count()
            to_delete.delete()
            total_deleted_no_phone_settings += deleted_count
            
            business_name = "Global" if not dup['business_id'] else f"Business {dup['business_id']}"
            print(f"   üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ {deleted_count} –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ No Phone –¥–ª—è '{business_name}'")
    
    print(f"   ‚úÖ AutoResponseSettings: –≤–∏–¥–∞–ª–µ–Ω–æ {phone_available_settings_count} Phone Available + {total_deleted_no_phone_settings} –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ No Phone")
    
    # 3. –û—á–∏—â–µ–Ω–Ω—è LeadPendingTask —Å—Ç–∞—Ä–∏—Ö phone_available=True –∑–∞–≤–¥–∞–Ω—å
    print("\nüìã –û—á–∏—â–µ–Ω–Ω—è LeadPendingTask —Å—Ç–∞—Ä–∏—Ö –∑–∞–ø–∏—Å—ñ–≤...")
    
    LeadPendingTask = apps.get_model('webhooks', 'LeadPendingTask')
    
    # –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ phone_available=True –∑–∞–≤–¥–∞–Ω–Ω—è (—Å—Ç–∞—Ä—ñ Phone Available)
    phone_available_tasks = LeadPendingTask.objects.filter(phone_available=True)
    phone_available_tasks_count = phone_available_tasks.count()
    
    if phone_available_tasks_count > 0:
        phone_available_tasks.delete()
        print(f"   üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ {phone_available_tasks_count} Phone Available –∑–∞–≤–¥–∞–Ω—å")
    
    # –í–∏–¥–∞–ª—è—î–º–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ñ —Å—Ç–∞—Ä—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
    old_inactive_tasks = LeadPendingTask.objects.filter(active=False)
    inactive_count = old_inactive_tasks.count()
    
    if inactive_count > 0:
        old_inactive_tasks.delete()
        print(f"   üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ {inactive_count} –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏—Ö —Å—Ç–∞—Ä–∏—Ö –∑–∞–≤–¥–∞–Ω—å")
    
    # 4. –î–µ—Ç–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç
    remaining_templates = FollowUpTemplate.objects.count()
    remaining_no_phone_templates = FollowUpTemplate.objects.filter(phone_available=False).count()
    remaining_settings = AutoResponseSettings.objects.count()
    remaining_no_phone_settings = AutoResponseSettings.objects.filter(phone_available=False).count()
    remaining_tasks = LeadPendingTask.objects.filter(phone_available=False).count()
    
    print(f"\nüìä –ü–Ü–î–°–£–ú–û–ö –ü–Ü–°–õ–Ø –û–ß–ò–©–ï–ù–ù–Ø:")
    print(f"   FollowUpTemplate: {remaining_templates} –∑–∞–ø–∏—Å—ñ–≤ (–≤—Å—ñ No Phone: {remaining_no_phone_templates})")
    print(f"   AutoResponseSettings: {remaining_settings} –∑–∞–ø–∏—Å—ñ–≤ (–≤—Å—ñ No Phone: {remaining_no_phone_settings})")
    print(f"   LeadPendingTask: {remaining_tasks} No Phone –∑–∞–≤–¥–∞–Ω—å –∑–∞–ª–∏—à–∏–ª–æ—Å—è")
    print(f"\nüóëÔ∏è  –í–°–¨–û–ì–û –í–ò–î–ê–õ–ï–ù–û:")
    print(f"   Phone Available —à–∞–±–ª–æ–Ω—ñ–≤: {phone_available_count}")
    print(f"   Phone Available –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å: {phone_available_settings_count}")
    print(f"   Phone Available –∑–∞–≤–¥–∞–Ω—å: {phone_available_tasks_count}")
    print(f"   –î—É–±–ª—ñ–∫–∞—Ç—ñ–≤ No Phone —à–∞–±–ª–æ–Ω—ñ–≤: {total_deleted_no_phone}")
    print(f"   –î—É–±–ª—ñ–∫–∞—Ç—ñ–≤ No Phone –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å: {total_deleted_no_phone_settings}")
    print(f"   –ù–µ–∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å: {inactive_count}")
    print(f"\n‚úÖ –¢–µ–ø–µ—Ä —Ç—ñ–ª—å–∫–∏ No Phone —à–∞–±–ª–æ–Ω–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –¥–ª—è –≤—Å—ñ—Ö —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤!")
    print("   üì± Phone Opt-In –ª—ñ–¥–∏ –±—É–¥—É—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è No Phone —à–∞–±–ª–æ–Ω–∞–º–∏")


def reverse_migration(apps, schema_editor):
    """
    –ù–µ –º–æ–∂–Ω–∞ –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ –≤–∏–¥–∞–ª–µ–Ω—ñ –¥—É–±–ª—ñ–∫–∞—Ç–∏
    """
    print("‚ö†Ô∏è  –í—ñ–¥–∫–∞—Ç —Ü—ñ—î—ó –º—ñ–≥—Ä–∞—Ü—ñ—ó –Ω–µ–º–æ–∂–ª–∏–≤–∏–π - –¥—É–±–ª—ñ–∫–∞—Ç–∏ –±—É–ª–∏ –≤–∏–¥–∞–ª–µ–Ω—ñ –Ω–∞–∑–∞–≤–∂–¥–∏")
    print("   –¶–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–∏–¥–∞–ª—è–ª–∏—Å—è —Ç—ñ–ª—å–∫–∏ –¥—É–±–ª—ñ–∫–∞—Ç–∏, –∞ –Ω–µ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ")


class Migration(migrations.Migration):
    dependencies = [
        ('webhooks', '0073_jobmapping_remove_leadpendingtask_uniq_lead_text_and_more'),
    ]

    operations = [
        migrations.RunPython(
            code=remove_phone_optin_duplicates,
            reverse_code=reverse_migration,
        ),
    ]
