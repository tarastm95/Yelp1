#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è handle_new_lead –ª–æ–≥—ñ–∫–∏
"""

def fix_handle_new_lead():
    """
    –í–∏–ø—Ä–∞–≤–ª—è—î handle_new_lead —â–æ–± –Ω–µ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ no-phone –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è phone opt-in –ª—ñ–¥—ñ–≤
    """
    
    file_path = "webhooks/webhook_views.py"  # –í–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π —à–ª—è—Ö
    
    # –ß–∏—Ç–∞—î–º–æ —Ñ–∞–π–ª
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Ç–∞ –∑–∞–º—ñ–Ω—é—î–º–æ –ø—Ä–æ–±–ª–µ–º–Ω—É —á–∞—Å—Ç–∏–Ω—É
    old_text = '''        try:
            # Call _process_auto_response to create LeadDetail but disable SMS for new leads
            self._process_auto_response(lead_id, phone_opt_in=False, phone_available=False)
            logger.info(f"[AUTO-RESPONSE] ‚úÖ handle_new_lead completed successfully for {lead_id}")'''
    
    new_text = '''        try:
            # Check if this lead has phone opt-in before creating tasks
            ld = LeadDetail.objects.filter(lead_id=lead_id).first()
            if ld and ld.phone_opt_in:
                logger.info(f"[AUTO-RESPONSE] Lead has phone_opt_in=True - skipping no-phone task creation")
                logger.info(f"[AUTO-RESPONSE] Phone opt-in handler will create appropriate tasks")
                # Just create LeadDetail without no-phone tasks - phone opt-in handler will handle tasks
                self._process_auto_response(lead_id, phone_opt_in=True, phone_available=False)
            else:
                logger.info(f"[AUTO-RESPONSE] Lead has phone_opt_in=False - creating no-phone tasks")
                # Call _process_auto_response to create LeadDetail but disable SMS for new leads
                self._process_auto_response(lead_id, phone_opt_in=False, phone_available=False)
            logger.info(f"[AUTO-RESPONSE] ‚úÖ handle_new_lead completed successfully for {lead_id}")'''
    
    if old_text in content:
        content = content.replace(old_text, new_text)
        
        # –ó–∞–ø–∏—Å—É—î–º–æ –Ω–∞–∑–∞–¥
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print("‚úÖ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è handle_new_lead –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        print("üìù –¢–µ–ø–µ—Ä handle_new_lead –ø–µ—Ä–µ–≤—ñ—Ä—è—î phone_opt_in –ø–µ—Ä–µ–¥ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è–º –∑–∞–≤–¥–∞–Ω—å")
        print("üéØ –¶–µ –∑–∞–ø–æ–±—ñ–≥–∞—î —Å—Ç–≤–æ—Ä–µ–Ω–Ω—é no-phone –∑–∞–≤–¥–∞–Ω—å –¥–ª—è phone opt-in –ª—ñ–¥—ñ–≤")
        return True
    else:
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∫–æ–¥ –¥–ª—è –∑–∞–º—ñ–Ω–∏")
        print("üîç –°–ø—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç...")
        
        # –°–ø—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ —á–∞—Å—Ç–∏–Ω—É –∫–æ–¥—É
        if "self._process_auto_response(lead_id, phone_opt_in=False, phone_available=False)" in content:
            print("‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ü—ñ–ª—å–æ–≤–∏–π —Ä—è–¥–æ–∫ –¥–ª—è –∑–∞–º—ñ–Ω–∏")
            
            # –ó–∞–º—ñ–Ω–∏–º–æ —Ç—ñ–ª—å–∫–∏ —Ü–µ–π —Ä—è–¥–æ–∫
            old_line = "            self._process_auto_response(lead_id, phone_opt_in=False, phone_available=False)"
            new_lines = '''            # Check if this lead has phone opt-in before creating tasks
            ld = LeadDetail.objects.filter(lead_id=lead_id).first()
            if ld and ld.phone_opt_in:
                logger.info(f"[AUTO-RESPONSE] Lead has phone_opt_in=True - skipping no-phone task creation")
                logger.info(f"[AUTO-RESPONSE] Phone opt-in handler will create appropriate tasks")
                # Just create LeadDetail without no-phone tasks - phone opt-in handler will handle tasks
                self._process_auto_response(lead_id, phone_opt_in=True, phone_available=False)
            else:
                logger.info(f"[AUTO-RESPONSE] Lead has phone_opt_in=False - creating no-phone tasks")
                # Call _process_auto_response to create LeadDetail but disable SMS for new leads
                self._process_auto_response(lead_id, phone_opt_in=False, phone_available=False)'''
            
            content = content.replace(old_line, new_lines)
            
            # –ó–∞–ø–∏—Å—É—î–º–æ –Ω–∞–∑–∞–¥
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print("‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
            return True
        else:
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∂–æ–¥–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –¥–ª—è –∑–∞–º—ñ–Ω–∏")
            return False

if __name__ == "__main__":
    fix_handle_new_lead()
