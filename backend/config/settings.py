"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os

# Default to plain-text storage of tokens unless explicitly overridden
os.environ.setdefault("DISABLE_TOKEN_ENCRYPTION", "true")

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_8)i-uy_l-lq%@swb75enu8e4s)wumz1ap*f-hth9gxm)k3%lg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '77e2-194-44-109-244.ngrok-free.app',
    '127.0.0.1',
    'localhost',
    '46.62.139.177',
]

REDIS_URL = os.getenv("REDIS_URL", "redis://redis:6379/1")
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": REDIS_URL,
    }
}

# settings.py
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,   # не вимикати логери Django
    'formatters': {
        'simple': {
            'format': '{asctime} [{levelname}] {name}:{lineno} {message}',
            'style': '{',
            'datefmt': '%Y-%m-%d %H:%M:%S %Z',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',   # рівень для всіх логерів без явної конфігурації
    },
    'loggers': {
        # ваш додаток
        'webhooks': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        # щоб також бачити запити DRF, можна ввімкнути
        'django.request': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

CELERY_BROKER_URL      = "redis://localhost:6379/0"
CELERY_RESULT_BACKEND  = "redis://localhost:6379/1"
CELERY_ACCEPT_CONTENT  = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
# Use UTC for Celery to avoid timezone offsets when scheduling tasks
CELERY_TIMEZONE = "UTC"


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'webhooks',
    'corsheaders',
    'django_filters',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DB_ENGINE = os.getenv("DB_ENGINE", "sqlite")

if DB_ENGINE == "postgres":
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": os.getenv("POSTGRES_DB", "postgres"),
            "USER": os.getenv("POSTGRES_USER", "yelproot"),
            "PASSWORD": os.getenv("POSTGRES_PASSWORD", "yelproot"),
            "HOST": os.getenv("POSTGRES_HOST", "localhost"),
            "PORT": os.getenv("POSTGRES_PORT", "5432"),
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "dbdata" / "db.sqlite3",
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Yelp OAuth Settings
YELP_CLIENT_ID = 'aqlct9xjUJHu0Lu5I0zW0Q'
YELP_CLIENT_SECRET = 'obKNrCDl4i7Pgt8tjNmWA7Nq162QqPc2RvNqjS3BaGRBSRdkhO4rrR32o50UxYKq'
YELP_OAUTH_REDIRECT_URI = 'http://46.62.139.177:8000/yelp/auth/callback/'
YELP_AUTHORIZATION_URL = 'https://biz.yelp.com/oauth2/authorize'
YELP_TOKEN_URL = 'https://api.yelp.com/oauth2/token'
YELP_PARTNER_API_URL = 'https://partner-api.yelp.com/v3/businesses'
YELP_OAUTH_SCOPES = [
    'leads',              # для роботи з лідами
    'r2r',               # для відповідей на відгуки
    'r2r_get_businesses', # для отримання списку бізнесів
    'r2r_business_owner'  # для отримання інформації про власника
]
YELP_API_KEY = os.getenv("YELP_API_KEY", "KTqXwkcW5t4EwUN-8SusEfrSfctwVDIJ65FXXR3T72xYS-ZEuKORWvtvT1OQ8zBIcCXsP7nyrcXFuL_93988JoPpezu1Or4mE25_tSA8zVKji_4NI6_EbHJMbOYRZHYx")
YELP_TOKEN_SECRET = os.getenv("YELP_TOKEN_SECRET", "0123456789ABCDEF0123456789ABCDEF")
# When true, tokens are stored and logged in plain text without encryption
DISABLE_TOKEN_ENCRYPTION = os.getenv("DISABLE_TOKEN_ENCRYPTION", "false").lower() in ("1", "true", "yes")
GOOGLE_TIMEZONE_API_KEY = os.getenv("GOOGLE_TIMEZONE_API_KEY", "AIzaSyC3TB24rn-fp7IJ2m_T3PyMKLXuDSNOL9k")

# Frontend URL
FRONTEND_URL = 'http://46.62.139.177:3000'

# Google sheets
GS_SCOPES = ["https://www.googleapis.com/auth/spreadsheets"]

GS_SPREADSHEET_ID   = "1yvOoB5D31scVa5oNFHFfRycD8Wtd3uqTOmbMisatc8Q"
GOOGLE_SERVICE_ACCOUNT_FILE = BASE_DIR / "service_account.json"

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'http://localhost:3001',
    'http://46.62.139.177:3000',
]

CELERY_BEAT_SCHEDULE = {
    # для FollowUpTemplate-повідомлень
    'send-scheduled-every-minute': {
        'task': 'webhooks.tasks.send_due_scheduled_messages',
        'schedule': 60.0,
    },
    # для одноразових LeadScheduledMessage
    'send-lead-scheduled-every-minute': {
        'task': 'webhooks.tasks.send_due_lead_scheduled_messages',
        'schedule': 60.0,
    },
    'refresh-yelp-tokens': {
        'task': 'webhooks.tasks.refresh_expiring_tokens',
        'schedule': 1800.0,
    },
}
