#!/usr/bin/env python3
"""
–î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Phone Opt-In –ø—Ä–æ–±–ª–µ–º
"""
import os
import sys
import django

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Django
sys.path.append('/var/www/yelp/backend')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from webhooks.models import LeadDetail, LeadEvent, AutoResponseSettings, LeadPendingTask

def debug_lead_phone_optin(lead_id):
    print(f"üîç –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê PHONE OPT-IN –¥–ª—è –ª—ñ–¥–∞: {lead_id}")
    print("=" * 60)
    
    # 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ LeadDetail
    try:
        lead_detail = LeadDetail.objects.get(lead_id=lead_id)
        print(f"üìã LeadDetail –∑–Ω–∞–π–¥–µ–Ω–æ:")
        print(f"   - business_id: {lead_detail.business_id}")
        print(f"   - phone_opt_in: {lead_detail.phone_opt_in}")
        print(f"   - phone_number: {lead_detail.phone_number}")
        print(f"   - phone_in_text: {getattr(lead_detail, 'phone_in_text', 'Not set')}")
        print(f"   - time_created: {lead_detail.time_created}")
    except LeadDetail.DoesNotExist:
        print("‚ùå LeadDetail –ù–ï –∑–Ω–∞–π–¥–µ–Ω–æ!")
        return
    
    # 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ AutoResponseSettings
    print(f"\nüéØ AutoResponseSettings –¥–ª—è business_id: {lead_detail.business_id}")
    settings = AutoResponseSettings.objects.filter(business_id=lead_detail.business_id)
    for setting in settings:
        print(f"   - ID: {setting.id}, phone_opt_in: {setting.phone_opt_in}, phone_available: {setting.phone_available}, enabled: {setting.enabled}")
    
    # 3. –®—É–∫–∞—î–º–æ CONSUMER_PHONE_NUMBER_OPT_IN_EVENT
    print(f"\nüì± –ü–æ—à—É–∫ CONSUMER_PHONE_NUMBER_OPT_IN_EVENT:")
    phone_optin_events = LeadEvent.objects.filter(
        lead_id=lead_id,
        event_type="CONSUMER_PHONE_NUMBER_OPT_IN_EVENT"
    ).order_by('time_created')
    
    if phone_optin_events.exists():
        print(f"   ‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {phone_optin_events.count()} CONSUMER_PHONE_NUMBER_OPT_IN_EVENT(s):")
        for event in phone_optin_events:
            print(f"      - event_id: {event.event_id}")
            print(f"      - time_created: {event.time_created}")
            print(f"      - user_type: {event.user_type}")
            print(f"      - text: '{event.text}'")
    else:
        print("   ‚ùå CONSUMER_PHONE_NUMBER_OPT_IN_EVENT –ù–ï –∑–Ω–∞–π–¥–µ–Ω–æ!")
        print("   üîç –¶–µ –ø–æ—è—Å–Ω—é—î, —á–æ–º—É phone_opt_in=False")
    
    # 4. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ –ø–æ–¥—ñ—ó –¥–ª—è —Ü—å–æ–≥–æ –ª—ñ–¥–∞
    print(f"\nüìä –í—Å—ñ –ø–æ–¥—ñ—ó –¥–ª—è –ª—ñ–¥–∞ (–æ—Å—Ç–∞–Ω–Ω—ñ 10):")
    all_events = LeadEvent.objects.filter(lead_id=lead_id).order_by('-time_created')[:10]
    for event in all_events:
        print(f"   - {event.event_type} | {event.user_type} | {event.time_created} | '{event.text[:50]}...'")
    
    # 5. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î consumer eventi
    print(f"\nüë§ Consumer –ø–æ–¥—ñ—ó:")
    consumer_events = LeadEvent.objects.filter(
        lead_id=lead_id,
        user_type="CONSUMER"
    ).order_by('time_created')
    
    for event in consumer_events:
        print(f"   - {event.event_type} | {event.time_created} | '{event.text[:50]}...'")
    
    # 6. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
    print(f"\nüìã –ê–∫—Ç–∏–≤–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è:")
    active_tasks = LeadPendingTask.objects.filter(lead_id=lead_id, active=True)
    for task in active_tasks:
        print(f"   - ID: {task.id}, phone_opt_in: {task.phone_opt_in}, phone_available: {task.phone_available}, text: '{task.text[:50]}...'")
    
    # 7. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
    print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á:")
    if not phone_optin_events.exists():
        print("   1. –°–ø–æ–∂–∏–≤–∞—á –Ω—ñ–∫–æ–ª–∏ –Ω–µ –ø–æ–≥–æ–¥–∂—É–≤–∞–≤—Å—è –Ω–∞–¥–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É")
        print("   2. Yelp –Ω–µ –Ω–∞–¥—ñ—Å–ª–∞–≤ CONSUMER_PHONE_NUMBER_OPT_IN_EVENT")
        print("   3. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π webhook –≤ Yelp")
        print("   4. –ú–æ–∂–ª–∏–≤–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–ø—Ä–æ—Å–∏—Ç–∏ —Å–ø–æ–∂–∏–≤–∞—á–∞ –∑–Ω–æ–≤—É –ø–æ–≥–æ–¥–∏—Ç–∏—Å—è –Ω–∞ –Ω–∞–¥–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞")
    else:
        print("   1. Phone opt-in –ø–æ–¥—ñ—ó —î, –∞–ª–µ LeadDetail.phone_opt_in=False")
        print("   2. –ú–æ–∂–ª–∏–≤–æ –ø—Ä–æ–±–ª–µ–º–∞ –∑ –æ–±—Ä–æ–±–∫–æ—é webhook")
        print("   3. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ webhook –¥–ª—è —Ü–∏—Ö –ø–æ–¥—ñ–π")

if __name__ == "__main__":
    lead_id = "iUf11StqZaveuBxNIfDQ8w"  # –í–∞—à –ø—Ä–æ–±–ª–µ–º–Ω–∏–π –ª—ñ–¥
    debug_lead_phone_optin(lead_id)
