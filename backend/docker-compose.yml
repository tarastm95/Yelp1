services:
  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      uvicorn config.asgi:application
      --host 0.0.0.0
      --port 8000
      --reload
      --log-level debug
    restart: unless-stopped
    environment:
      DEBUG: "1"
      SECRET_KEY: "super-secret-key"
      ALLOWED_HOSTS: "127.0.0.1,localhost,46.62.139.177"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      DB_ENGINE: "postgres"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
    depends_on:
      - redis
      - db

  redis:
    image: redis:7
    restart: unless-stopped
    volumes:
      - redis_data:/data

  db:
    image: postgres:16
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
      POSTGRES_HOST_AUTH_METHOD: "md5"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  celery:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A config worker --loglevel=info --concurrency=4
    restart: unless-stopped
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      DB_ENGINE: "postgres"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
    volumes:
      - .:/app
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
    depends_on:
      - redis
      - db

  celery-beat:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A config beat --loglevel=info
    restart: unless-stopped
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      DB_ENGINE: "postgres"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
    volumes:
      - .:/app
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
    depends_on:
      - redis
      - db

  loki:
    image: grafana/loki:2.9.5
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.5
    restart: unless-stopped
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3002:3000"
    depends_on:
      - loki

volumes:
  postgres_data:
  redis_data:

