services:
  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      uvicorn config.asgi:application
      --host 0.0.0.0
      --port 8000
      --reload
      --log-level debug
    restart: unless-stopped
    environment:
      DEBUG: "1"
      SECRET_KEY: "super-secret-key"
      ALLOWED_HOSTS: "127.0.0.1,localhost,46.62.139.177"
      DB_ENGINE: "postgres"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db

  redis:
    image: redis:7
    restart: unless-stopped
    volumes:
      - redis_data:/data

  db:
    image: postgres:16
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
      POSTGRES_HOST_AUTH_METHOD: "md5"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rqworker:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: python manage.py rqworker default
    restart: unless-stopped
    environment:
      DB_ENGINE: "postgres"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
    volumes:
      - .:/app
    depends_on:
      - redis
      - db

  rqscheduler:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: python manage.py rqscheduler
    restart: unless-stopped
    environment:
      DB_ENGINE: "postgres"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
    volumes:
      - .:/app
    depends_on:
      - redis
      - db

  rqdash:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      rq-dashboard
      --redis-url redis://redis:6379/1
      --host 0.0.0.0
      --port 9181
      --queues default,high,emails,scheduled_jobs
    restart: unless-stopped
    ports:
      - "9181:9181"
    depends_on:
      - redis

  scheduler-dashboard:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      rq-scheduler-dashboard
      --redis-url redis://redis:6379/1
    restart: unless-stopped
    ports:
      - "9182:9182"
    depends_on:
      - redis


volumes:
  postgres_data:
  redis_data:

