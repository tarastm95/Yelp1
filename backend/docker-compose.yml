services:
  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      uvicorn config.asgi:application
      --host 0.0.0.0
      --port 8000
      --reload
      --log-level debug
    env_file:
      - .env
    restart: unless-stopped
    environment:
      DEBUG: "1"
      SECRET_KEY: "super-secret-key"
      ALLOWED_HOSTS: "127.0.0.1,localhost,46.62.139.177"
      DB_ENGINE: "postgres"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
    volumes:
      - .:/app
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "31"  # 31 —Ñ–∞–π–ª—ñ–≤ = ~–º—ñ—Å—è—Ü—å –ª–æ–≥—ñ–≤
        compress: "true"

  redis:
    image: redis:7
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./logs:/logs
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "31"
        compress: "true"

  db:
    image: postgres:16
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
      POSTGRES_HOST_AUTH_METHOD: "md5"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs:/logs
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "31"
        compress: "true"

  rqworker:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: python manage.py rqworker default
    env_file:
      - .env
    restart: unless-stopped
    environment:
      DB_ENGINE: "postgres"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - redis
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "31"
        compress: "true"

  rqscheduler:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: python manage.py rqscheduler
    env_file:
      - .env
    restart: unless-stopped
    environment:
      DB_ENGINE: "postgres"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "yelproot"
      POSTGRES_PASSWORD: "yelproot"
      POSTGRES_DB: "postgres"
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - redis
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "31"
        compress: "true"

  rqdash:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: rq-dashboard -b 0.0.0.0 -p 9181
    env_file:
      - .env
    restart: unless-stopped
    environment:
      RQ_DASHBOARD_REDIS_URL: redis://redis:6379/1
      RQ_DASHBOARD_QUEUES: default,high,emails,scheduled_jobs
    ports:
      - "9181:9181"
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "31"
        compress: "true"

  scheduler-dashboard:
    build:
      context: .
      dockerfile: ./Dockerfile
    # Patch rq_scheduler_dashboard to avoid deprecated hook
    command: >-
      sh -c "
        sed -i 's/before_app_first_request/before_app_request/' \
          /usr/local/lib/python3.12/site-packages/rq_scheduler_dashboard/web.py &&
        rq-scheduler-dashboard --redis-url redis://redis:6379/1
      "
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "9182:9182"
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "31"
        compress: "true"

  redis-commander:
    image: rediscommander/redis-commander:latest
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:1
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
        max-file: "31"
        compress: "true"

  # –í–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ª–æ–≥—ñ–≤
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "9999:8080"
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "name=yelp1*"
    restart: unless-stopped

  # Loki - –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ç–∞ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—è –ª–æ–≥—ñ–≤
  loki:
    image: grafana/loki:2.9.0
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml -log.level=warn  # üîá –¢—ñ–ª—å–∫–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —Ç–∞ –ø–æ–º–∏–ª–∫–∏
    volumes:
      - loki_data:/loki
      - ./loki-config.yaml:/etc/loki/local-config.yaml:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"  # üìâ –ó–º–µ–Ω—à–∏—Ç–∏ —Ä–æ–∑–º—ñ—Ä –ª–æ–≥ —Ñ–∞–π–ª—ñ–≤
        max-file: "2"

  # Promtail - –∑–±–∏—Ä–∞—á –ª–æ–≥—ñ–≤ –∑ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
  promtail:
    image: grafana/promtail:2.9.0
    restart: unless-stopped
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./promtail-config.yaml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml -log.level=warn  # üîá –¢—ñ–ª—å–∫–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —Ç–∞ –ø–æ–º–∏–ª–∫–∏
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"  # üìâ –ó–º–µ–Ω—à–∏—Ç–∏ —Ä–æ–∑–º—ñ—Ä –ª–æ–≥ —Ñ–∞–π–ª—ñ–≤
        max-file: "2"

  # Grafana - –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–∞ –ø–æ—à—É–∫—É –ª–æ–≥—ñ–≤
  grafana:
    image: grafana/grafana:10.2.0
    restart: unless-stopped
    ports:
      - "3030:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

volumes:
  postgres_data:
  redis_data:
  loki_data:
  grafana_data:
