#!/usr/bin/env python3
"""
–î–æ–¥–∞—î –ø–µ—Ä–µ–≤—ñ—Ä–∫—É sms_notifications_enabled –≤ _process_auto_response
"""

def fix_auto_response_sms_check():
    """
    –î–æ–¥–∞—î –ø–µ—Ä–µ–≤—ñ—Ä–∫—É YelpBusiness.sms_notifications_enabled –≤ _process_auto_response
    """
    
    file_path = "webhooks/webhook_views.py"
    
    # –ß–∏—Ç–∞—î–º–æ —Ñ–∞–π–ª
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –º—ñ—Å—Ü–µ –ø—ñ—Å–ª—è final_sms_decision
    old_code = '''            if final_sms_decision:
                logger.info(f"[AUTO-RESPONSE] üöÄ SENDING SMS for {reason} scenario")
                
                # Get NotificationSettings for this business to send SMS
                from .models import NotificationSetting'''
    
    new_code = '''            if final_sms_decision:
                logger.info(f"[AUTO-RESPONSE] üöÄ PRELIMINARY SMS DECISION: True for {reason} scenario")
                
                # üîí CRITICAL: Check if SMS notifications are globally enabled for this business
                logger.info(f"[AUTO-RESPONSE] üîî CHECKING BUSINESS SMS NOTIFICATIONS STATUS")
                business = YelpBusiness.objects.filter(business_id=pl.business_id).first()
                
                if business:
                    logger.info(f"[AUTO-RESPONSE] Business found: {business.name}")
                    logger.info(f"[AUTO-RESPONSE] SMS notifications enabled: {business.sms_notifications_enabled}")
                    
                    if not business.sms_notifications_enabled:
                        logger.info(f"[AUTO-RESPONSE] üö´ SMS NOTIFICATIONS DISABLED for business: {pl.business_id}")
                        logger.info(f"[AUTO-RESPONSE] Business admin has turned off SMS notifications")
                        logger.info(f"[AUTO-RESPONSE] üõë CANCELLING SMS - business SMS disabled")
                        logger.info(f"[AUTO-RESPONSE] AutoResponseSettings SMS will be skipped")
                        final_sms_decision = False
                    else:
                        logger.info(f"[AUTO-RESPONSE] ‚úÖ SMS NOTIFICATIONS ENABLED - proceeding with SMS")
                else:
                    logger.warning(f"[AUTO-RESPONSE] ‚ö†Ô∏è Business not found for business_id: {pl.business_id}")
                    logger.warning(f"[AUTO-RESPONSE] Cannot verify SMS enable status - proceeding with caution")
                
                logger.info(f"[AUTO-RESPONSE] üéØ FINAL SMS DECISION AFTER BUSINESS CHECK: {final_sms_decision}")
                
                if final_sms_decision:
                    logger.info(f"[AUTO-RESPONSE] üì§ SENDING SMS for {reason} scenario")
                
                    # Get NotificationSettings for this business to send SMS
                    from .models import NotificationSetting'''
    
    if old_code in content:
        content = content.replace(old_code, new_code)
        
        # –ó–∞–ø–∏—Å—É—î–º–æ –Ω–∞–∑–∞–¥
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print("‚úÖ SMS BUSINESS CHECK –î–û–î–ê–ù–û –í _process_auto_response!")
        print("üîí –¢–µ–ø–µ—Ä AutoResponseSettings SMS —Ç–∞–∫–æ–∂ –ø–µ—Ä–µ–≤—ñ—Ä—è—î business enable status")
        return True
    else:
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∫–æ–¥ –¥–ª—è –∑–∞–º—ñ–Ω–∏ –≤ _process_auto_response")
        return False

if __name__ == "__main__":
    fix_auto_response_sms_check()
