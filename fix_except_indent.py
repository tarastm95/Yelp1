#!/usr/bin/env python3
"""
üîß Fix except block indentation
"""

def fix_except_indent():
    """–í–∏–ø—Ä–∞–≤–ª—è—î —ñ–Ω–¥–µ–Ω—Ç–∞—Ü—ñ—é except –±–ª–æ–∫—É"""
    
    with open('backend/webhooks/vector_search_service.py', 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø—Ä–æ–±–ª–µ–º–Ω–∏–π except –Ω–∞ –ª—ñ–Ω—ñ—ó ~222
    for i, line in enumerate(lines):
        if 'except Exception as e:' in line and line.startswith('                except'):
            # –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ —ñ–Ω–¥–µ–Ω—Ç–∞—Ü—ñ—é: 16 –ø—Ä–æ–±—ñ–ª—ñ–≤ ‚Üí 8 –ø—Ä–æ–±—ñ–ª—ñ–≤
            lines[i] = '        except Exception as e:\n'
            print(f"‚úÖ Fixed line {i+1}: except block indentation")
            
        # –¢–∞–∫–æ–∂ –≤–∏–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ä—è–¥–∫–∏ –≤ except –±–ª–æ—Ü—ñ
        elif i < len(lines) - 1 and lines[i-1].strip() == 'except Exception as e:' and line.startswith('            logger.error'):
            lines[i] = '            logger.error(f"[VECTOR-SEARCH] Error in vector search: {e}")\n'
            print(f"‚úÖ Fixed line {i+1}: logger.error indentation")
            
        elif i < len(lines) - 1 and 'logger.exception("Vector search error details")' in line and line.startswith('            '):
            lines[i] = '            logger.exception("Vector search error details")\n'
            print(f"‚úÖ Fixed line {i+1}: logger.exception indentation")
            
        elif i < len(lines) - 1 and 'return []' in line and line.startswith('            ') and 'Vector search error' in lines[i-1]:
            lines[i] = '            return []\n'
            print(f"‚úÖ Fixed line {i+1}: return [] indentation")
    
    # –ó–∞–ø–∏—Å—É—î–º–æ –Ω–∞–∑–∞–¥
    with open('backend/webhooks/vector_search_service.py', 'w', encoding='utf-8') as f:
        f.writelines(lines)
    
    print("‚úÖ Fixed except block indentation!")

if __name__ == '__main__':
    fix_except_indent()
