#!/usr/bin/env python3
"""
üîß Simple indentation fix
"""

def simple_indent_fix():
    """–ü—Ä–æ—Å—Ç–æ –≤–∏–ø—Ä–∞–≤–ª—è—î —ñ–Ω–¥–µ–Ω—Ç–∞—Ü—ñ—é –º–µ—Ç–æ–¥—É _create_standard_chunks"""
    
    with open('backend/webhooks/vector_pdf_service.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ—Å—Ç–æ –∑–∞–º—ñ–Ω—é—î–º–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É —ñ–Ω–¥–µ–Ω—Ç–∞—Ü—ñ—é
    content = content.replace(
        "        def _create_standard_chunks(self, text: str, max_tokens: int) -> List[DocumentChunk]:",
        "    def _create_standard_chunks(self, text: str, max_tokens: int) -> List[DocumentChunk]:"
    )
    
    # –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ —ñ–Ω–¥–µ–Ω—Ç–∞—Ü—ñ—é –¥–ª—è –≤—Å—å–æ–≥–æ –º–µ—Ç–æ–¥—É - –∑–∞–º—ñ–Ω—é—î–º–æ 8 –ø—Ä–æ–±—ñ–ª—ñ–≤ –Ω–∞ 4 —Ç–∞–º –¥–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    lines = content.split('\\n')
    fixed_lines = []
    fix_next_lines = False
    
    for line in lines:
        if 'def _create_standard_chunks(self, text: str, max_tokens: int)' in line:
            fix_next_lines = True
            fixed_lines.append(line)
        elif fix_next_lines and line.startswith('    def ') and 'def _create_standard_chunks' not in line:
            # –ù–∞—Å—Ç—É–ø–Ω–∏–π –º–µ—Ç–æ–¥ - –ø—Ä–∏–ø–∏–Ω—è—î–º–æ —Ñ—ñ–∫—Å–∏—Ç–∏
            fix_next_lines = False
            fixed_lines.append(line)
        elif fix_next_lines and line.startswith('        '):
            # –¶–µ —Ä—è–¥–æ–∫ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ _create_standard_chunks - –∑–º–µ–Ω—à—É—î–º–æ —ñ–Ω–¥–µ–Ω—Ç–∞—Ü—ñ—é
            fixed_lines.append(line[4:])  # –í–∏–¥–∞–ª—è—î–º–æ 4 –ø—Ä–æ–±—ñ–ª–∏
        else:
            fixed_lines.append(line)
    
    content = '\\n'.join(fixed_lines)
    
    with open('backend/webhooks/vector_pdf_service.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ Fixed method indentation!")

if __name__ == '__main__':
    simple_indent_fix()
