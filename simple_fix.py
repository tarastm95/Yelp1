#!/usr/bin/env python3
"""
üîß Simple fix: completely replace broken method
"""

import re

def simple_fix():
    """–ü–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–º—ñ–Ω—é—î broken _create_sample_replies_chunks –º–µ—Ç–æ–¥"""
    
    with open('backend/webhooks/vector_pdf_service.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –∑–∞–º—ñ–Ω—é—î–º–æ –≤–µ—Å—å broken –º–µ—Ç–æ–¥
    # –ü–æ—à—É–∫ –≤—ñ–¥ –ø–æ—á–∞—Ç–∫—É –º–µ—Ç–æ–¥—É –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É
    method_pattern = r'    def _create_sample_replies_chunks\(self, text: str, max_tokens: int\) -> List\[DocumentChunk\]:.*?(?=    def _create_standard_chunks)'
    
    new_method = '''    def _create_sample_replies_chunks(self, text: str, max_tokens: int) -> List[DocumentChunk]:
        """üîÑ Fallback: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π chunking –¥–ª—è Sample Replies"""
        
        logger.warning("[VECTOR-PDF] ‚ö†Ô∏è Specialized chunker not available - using enhanced standard method")
        return self._create_standard_chunks(text, max_tokens)

    '''
    
    content = re.sub(method_pattern, new_method, content, flags=re.DOTALL)
    
    with open('backend/webhooks/vector_pdf_service.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ Replaced broken method with clean working version!")

if __name__ == '__main__':
    simple_fix()
